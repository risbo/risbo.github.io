https://oneexperian.webex.com/oneexperian-en/j.php?MTID=mdd6cf65f47bb99ff2d3ac730ab3864b3

https://oneexperian.webex.com/oneexperian-en/j.php?MTID=mdd6cf65f47bb99ff2d3ac730ab3864b3

<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true" scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" keystoreFile="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64/bin/keystore.jks" keystorePass="urtjboss"/> 

<connector name="https" protocol="HTTP/1.1" scheme="https" socket-binding="https" secure="true"> 

<ssl key-alias="ssl" password="urtjboss" certificate-key-file="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64/bin/keystore.jks" verify-client="false" /> 

</connector> 


descargar el archivo
https://openlayers.org/api/OpenLayers.js 
ponerlo en la ruta 

C:\dev\registro\02.Aplicacion\01.Codigo\Registro-war\WebContent\resources\js

luego cambiar donde haya

<script type="text/javascript"
				src="http://openlayers.org/api/OpenLayers.js"></script>
				
a				
			<h:outputScript library="js" name="OpenLayers.js" />
			
		o ponerle https
		
<script type="text/javascript"
				src="https://openlayers.org/api/OpenLayers.js"></script>			
				
				
C:\dev\tomcat-7.0.22-geoserver-urt\webapps\geoserver\data\workspaces\restitucion\restitucion

C:\dev\tomcat-7.0.22-geoserver-urt\webapps\geoserver\WEB-INF

<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 -->
<Server port="8005" shutdown="SHUTDOWN">
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener" />
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container", 
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">
  
    <!--The connectors can use a shared executor, you can define one or more named thread pools-->
    <!--
    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-" 
        maxThreads="150" minSpareThreads="4"/>
    -->
    
    
    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
         Define a non-SSL HTTP/1.1 Connector on port 8080
    -->
    <Connector port="8090" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" />
			   
	<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
               scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS"
               keystoreFile="conf/.keystore" keystorePass="geoserver"/>
			   
    <!-- A "Connector" using the shared thread pool-->
    <!--
    <Connector executor="tomcatThreadPool"
               port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" />
    -->           
    <!-- Define a SSL HTTP/1.1 Connector on port 8443
         This connector uses the JSSE configuration, when using APR, the 
         connector should be using the OpenSSL style configuration
         described in the APR documentation -->
    <!--
    <Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
               maxThreads="150" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" />
    -->

    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <Connector port="8011" protocol="AJP/1.3" redirectPort="8443" />


    <!-- An Engine represents the entry point (within Catalina) that processes
         every request.  The Engine implementation for Tomcat stand alone
         analyzes the HTTP headers included with the request, and passes them
         on to the appropriate Host (virtual host).
         Documentation at /docs/config/engine.html -->

    <!-- You should set jvmRoute to support load-balancing via AJP ie :
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">         
    --> 
    <Engine name="Catalina" defaultHost="localhost">

      <!--For clustering, please take a look at documentation at:
          /docs/cluster-howto.html  (simple how to)
          /docs/config/cluster.html (reference documentation) -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->        

      <!-- Use the LockOutRealm to prevent attempts to guess user passwords
           via a brute-force attack -->
      <Realm className="org.apache.catalina.realm.LockOutRealm">
        <!-- This Realm uses the UserDatabase configured in the global JNDI
             resources under the key "UserDatabase".  Any edits
             that are performed against this UserDatabase are immediately
             available for use by the Realm.  -->
        <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase"/>
      </Realm>

      <Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern="common" -->
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log." suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />

      </Host>
    </Engine>
  </Service>
</Server>





Generar el Key
.keystore
Ponerlo en conf

en server poner
<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
               scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS"
               keystoreFile="conf/.keystore" keystorePass="geoserver"/>
			   
			   
			   
en el web.xml de geoserver poner

<!-- Require HTTPS for everything except /img (favicon) and /css. -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>HTTPSOnly</web-resource-name>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>HTTPSOrHTTP</web-resource-name>
            <url-pattern>*.ico</url-pattern>
            <url-pattern>/img/*</url-pattern>
            <url-pattern>/css/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>			   
    
    
    
<connector name="https" protocol="HTTP/1.1" scheme="https" socket-binding="https" secure="true">
<ssl key-alias="ssl" password="urtjboss" certificate-key-file="/usr/lib/jvm/java-8-openjdk-amd64/bin/keystore.jks" verify-client="false" />
</connector>

find  / -name java

cd /usr/lib/jvm/java-11-openjdk-amd64/bin

./keytool -genkey -alias ssl -keyalg RSA -keystore keystore.jks -keysize 2048 -ext SAN=dns:www.restituciondetierras.gov.co

contraseña: urtjboss

./keytool -certreq -alias ssl -keystore keystore.jks -file UrtCert.csr -ext SAN=dns:www.restituciondetierras.gov.co

contraseña: urtjboss


cd /home/work/dev/jboss-eap-6.4/standalone/configuration


 <connector name="https" protocol="HTTP/1.1" scheme="https" socket-binding="https" secure="true">
<ssl key-alias="ssl" password="urtjboss" certificate-key-file="./keystore.jks" verify-client="false" />
</connector>



<subsystem xmlns="urn:jboss:domain:web:2.2" default-virtual-server="default-host" native="false">
        
        <connector name="https" protocol="HTTP/1.1" scheme="https" socket-binding="https" secure="true">
<ssl key-alias="ssl" password="urtjboss" certificate-key-file="./keystore.jks" verify-client="false" />
</connector>

            <connector name="http" protocol="HTTP/1.1" scheme="http" socket-binding="http"/>
            <virtual-server name="default-host" enable-welcome-root="true">
                <alias name="localhost"/>
                <alias name="example.com"/>
            </virtual-server>
        </subsystem>
        
        
     OPTIONAL REMOVER DE standalone.conf -XX:MaxPermSize=256m
     
     https://stackoverflow.com/questions/22634644/java-hotspottm-64-bit-server-vm-warning-ignoring-option-maxpermsize
     
     
   https://stackoverflow.com/questions/22634644/java-hotspottm-64-bit-server-vm-warning-ignoring-option-maxpermsize  
     
        

work@work:~/Descargas$ cd Error al iniciar el contenedor: java.lang.NoClassDefFoundError: javax/security/auth/Policy
bash: cd: demasiados argumentos
work@work:~/Descargas$ sudo su
[sudo] contraseña para work:     
root@work:/home/work/Descargas# cd /usr/lib/jvm/java-8-openjdk-amd64/bin/java
bash: cd: /usr/lib/jvm/java-8-openjdk-amd64/bin/java: No es un directorio
root@work:/home/work/Descargas# cd /usr/lib/jvm/java-8-openjdk-amd64/bin/
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ls
java          jjs      orbd     policytool  rmiregistry  tnameserv
java-rmi.cgi  keytool  pack200  rmid        servertool   unpack200
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# pwd
/usr/lib/jvm/java-8-openjdk-amd64/bin
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# cd ..
root@work:/usr/lib/jvm/java-8-openjdk-amd64# ls
bin  docs  jre  man
root@work:/usr/lib/jvm/java-8-openjdk-amd64# pwd
/usr/lib/jvm/java-8-openjdk-amd64
root@work:/usr/lib/jvm/java-8-openjdk-amd64# cd bin
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ls
java          jjs      orbd     policytool  rmiregistry  tnameserv
java-rmi.cgi  keytool  pack200  rmid        servertool   unpack200
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ./keytool -genkey -alias ssl -keyalg RSA -keystore keystore.jks -keysize 2048 -ext SAN=dns:www.restituciondetierras.gov.co
Introduzca la contraseña del almacén de claves:  
Volver a escribir la contraseña nueva: 
¿Cuáles son su nombre y su apellido?
  [Unknown]:  URT
¿Cuál es el nombre de su unidad de organización?
  [Unknown]:  URT
¿Cuál es el nombre de su organización?
  [Unknown]:  URT
¿Cuál es el nombre de su ciudad o localidad?
  [Unknown]:  Bogota
¿Cuál es el nombre de su estado o provincia?
  [Unknown]:  Cundinamarca
¿Cuál es el código de país de dos letras de la unidad?
  [Unknown]:  CO
¿Es correcto CN=URT, OU=URT, O=URT, L=Bogota, ST=Cundinamarca, C=CO?
  [no]:  si

Introduzca la contraseña de clave para <ssl>
	(INTRO si es la misma contraseña que la del almacén de claves):  
Volver a escribir la contraseña nueva: 

Warning:
El almacén de claves JKS utiliza un formato propietario. Se recomienda migrar a PKCS12, que es un formato estándar del sector que utiliza "keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.jks -deststoretype pkcs12".
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ls
java          keystore.jks  pack200     rmiregistry  unpack200
java-rmi.cgi  keytool       policytool  servertool
jjs           orbd          rmid        tnameserv
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# 
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# 
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ./keytool -certreq -alias ssl -keystore keystore.jks -file UrtCert.csr -ext SAN=dns:www.restituciondetierras.gov.co
Introduzca la contraseña del almacén de claves:  

Warning:
El almacén de claves JKS utiliza un formato propietario. Se recomienda migrar a PKCS12, que es un formato estándar del sector que utiliza "keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.jks -deststoretype pkcs12".
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# ls
java          keystore.jks  pack200     rmiregistry  unpack200
java-rmi.cgi  keytool       policytool  servertool   UrtCert.csr
jjs           orbd          rmid        tnameserv
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# pwd
/usr/lib/jvm/java-8-openjdk-amd64/bin
root@work:/usr/lib/jvm/java-8-openjdk-amd64/bin# cd /
root@work:/# 
root@work:/# 
root@work:/# 
root@work:/# java -version
openjdk version "11.0.7" 2020-04-14
OpenJDK Runtime Environment (build 11.0.7+10-post-Ubuntu-3ubuntu1)
OpenJDK 64-Bit Server VM (build 11.0.7+10-post-Ubuntu-3ubuntu1, mixed mode)
root@work:/# 
root@work:/# 
root@work:/# 
root@work:/# find / -find java
find: predicado desconocido `-find'
root@work:/# find / -name java
/var/lib/dpkg/alternatives/java
find: ‘/proc/1475/task/1475/net’: Argumento inválido
find: ‘/proc/1475/net’: Argumento inválido
find: ‘/run/user/1000/doc’: Permiso denegado
find: ‘/run/user/1000/gvfs’: Permiso denegado
/usr/share/doc/bison/examples/java
/usr/share/java
/usr/share/bash-completion/completions/java
/usr/share/lintian/data/java
/usr/share/lintian/checks/languages/java
/usr/lib/libreoffice/share/Scripts/java
/usr/lib/jvm/java-11-openjdk-amd64/bin/java
/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
/usr/lib/jvm/java-8-openjdk-amd64/bin/java
/usr/bin/java
/etc/apparmor.d/abstractions/ubuntu-browsers.d/java
/etc/alternatives/java
/etc/ssl/certs/java
root@work:/# 




https://www.middlewarebox.com/2017/08/how-to-create-self-signed-certificate.html

https://certlogik.com/decoder/

https://www.middlewarebox.com/2017/08/how-to-configure-ssl-on-jboss-eap-with.html

X-Requested-With:XMLHttpRequest
//Content-Type:application/x-www-form-urlencoded; charset=UTF-8
Origin:https://urldefense.com/v3/__https://www.rues.org.co__;!!MfzFaTml5A!3fnwNzmtfdERkzpR9iheFVHlldbRGIJYTkOMCWN62o2J-hq3TqJiYMNM2n-SJk04_B3c$ 
Sec-Fetch-Site:same-origin
Sec-Fetch-Mode:cors
Sec-Fetch-Dest:empty
Referer:https://urldefense.com/v3/__https://www.rues.org.co/RM__;!!MfzFaTml5A!3fnwNzmtfdERkzpR9iheFVHlldbRGIJYTkOMCWN62o2J-hq3TqJiYMNM2n-SJqI2bBXb$ 
Cookie:__RequestVerificationToken=4kdRJS8c6f_GlaMvySt6du5JoycFopZgYSb0kEhOqy_G8SmsgpvjjnyVh83PQDpO8mOjmBENBvm5iu6Kr6AOoMrf3RJ1OzES_l4A-Sp9C5M1; _ga=GA1.3.1081409311.1600180117; _gid=GA1.3.1342792521.1600180117

https://www.rues.org.co/RM/ConsultaFacultades

__RequestVerificationToken:DjKhLALub0R1copNEKLqNAXFn2lAOvSI_LFSaMZ2V11Hi24-b2K-ElDrcJQqXRiyVSKUrSqnmagHOAKK060jSbZbG4GdhcxwMSLlc8O5XWg1
codigo_camara:04
matricula:0002078644


package com.experian.bepartners.entity.payload;

public class RuesOrgResponseRows {

	private String categoria_matricula;
	private String clase_identificacion;
	private String codigo_camara;
	private String codigo_estado;
	private String identificacion;
	private String estado;
	private String matricula;
	private String nombre_camara;
	private String organizacion_juridica;
	private String razon_social;
	private String sigla;
	private String tipo;
	private String enlaceVer;

	public String getCategoria_matricula() {
		return categoria_matricula;
	}

	public void setCategoria_matricula(String categoria_matricula) {
		this.categoria_matricula = categoria_matricula;
	}

	public String getClase_identificacion() {
		return clase_identificacion;
	}

	public void setClase_identificacion(String clase_identificacion) {
		this.clase_identificacion = clase_identificacion;
	}

	public String getCodigo_camara() {
		return codigo_camara;
	}

	public void setCodigo_camara(String codigo_camara) {
		this.codigo_camara = codigo_camara;
	}

	public String getCodigo_estado() {
		return codigo_estado;
	}

	public void setCodigo_estado(String codigo_estado) {
		this.codigo_estado = codigo_estado;
	}

	public String getIdentificacion() {
		return identificacion;
	}

	public void setIdentificacion(String identificacion) {
		this.identificacion = identificacion;
	}

	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	public String getMatricula() {
		return matricula;
	}

	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}

	public String getNombre_camara() {
		return nombre_camara;
	}

	public void setNombre_camara(String nombre_camara) {
		this.nombre_camara = nombre_camara;
	}

	public String getOrganizacion_juridica() {
		return organizacion_juridica;
	}

	public void setOrganizacion_juridica(String organizacion_juridica) {
		this.organizacion_juridica = organizacion_juridica;
	}

	public String getRazon_social() {
		return razon_social;
	}

	public void setRazon_social(String razon_social) {
		this.razon_social = razon_social;
	}

	public String getSigla() {
		return sigla;
	}

	public void setSigla(String sigla) {
		this.sigla = sigla;
	}

	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	public String getEnlaceVer() {
		return enlaceVer;
	}

	public void setEnlaceVer(String enlaceVer) {
		this.enlaceVer = enlaceVer;
	}

}


package com.experian.bepartners.entity.payload;

import java.util.List;

public class RuesOrgResponse {

	private String page;
	private String codigo_error;
	private String mensaje_error;
	private String records;
	private List<RuesOrgResponseRows> rows;

	public String getPage() {
		return page;
	}

	public void setPage(String page) {
		this.page = page;
	}

	public String getCodigo_error() {
		return codigo_error;
	}

	public void setCodigo_error(String codigo_error) {
		this.codigo_error = codigo_error;
	}

	public String getMensaje_error() {
		return mensaje_error;
	}

	public void setMensaje_error(String mensaje_error) {
		this.mensaje_error = mensaje_error;
	}

	public String getRecords() {
		return records;
	}

	public void setRecords(String records) {
		this.records = records;
	}

	public List<RuesOrgResponseRows> getRows() {
		return rows;
	}

	public void setRows(List<RuesOrgResponseRows> rows) {
		this.rows = rows;
	}

}



X-Requested-With:XMLHttpRequest
Content-Type:application/x-www-form-urlencoded; charset=UTF-8
Origin:https://www.rues.org.co
Sec-Fetch-Site:same-origin
Sec-Fetch-Mode:cors
Sec-Fetch-Dest:empty
Referer:https://www.rues.org.co/RM
Cookie:__RequestVerificationToken=4kdRJS8c6f_GlaMvySt6du5JoycFopZgYSb0kEhOqy_G8SmsgpvjjnyVh83PQDpO8mOjmBENBvm5iu6Kr6AOoMrf3RJ1OzES_l4A-Sp9C5M1; _ga=GA1.3.1081409311.1600180117; _gid=GA1.3.1342792521.1600180117

https://www.rues.org.co//RM/ConsultaNIT_json

__RequestVerificationToken:DjKhLALub0R1copNEKLqNAXFn2lAOvSI_LFSaMZ2V11Hi24-b2K-ElDrcJQqXRiyVSKUrSqnmagHOAKK060jSbZbG4GdhcxwMSLlc8O5XWg1
txtNIT:900422614


https://oneexperian.webex.com/oneexperian/e.php?MTID=maf28099c4d8a5efecf97a6d397a6b60f
 

